---
name: Deploy

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  deployment:
    permissions: write-all
    environment: deploy
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.versioncheck.outputs.version }}

    steps:
      - uses: actions/checkout@v4
        working-directory: ./client-lib
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        working-directory: ./client-lib
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Set up cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 21 for snapshots
        uses: actions/setup-java@v4
        working-directory: ./client-lib
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "maven"
          server-id: openconext-snapshots
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
        if: ( endsWith(steps.versioncheck.outputs.version, '-SNAPSHOT'))

      - name: Set up JDK 21 for releases
        uses: actions/setup-java@v4
        working-directory: ./client-lib
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "maven"
          server-id: openconext-releases
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
        if: ${{!( endsWith(steps.versioncheck.outputs.version, '-SNAPSHOT')) }}

      - name: Deploy with Maven
        working-directory: ./client-lib
        run: mvn --batch-mode deploy -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.BUILD_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.BUILD_PASSWORD }}
